<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ViewModels="clr-namespace:MobiHymn4.ViewModels"
    xmlns:fontawesome="clr-namespace:FontAwesome" xmlns:elements="clr-namespace:MobiHymn4.Elements"
    x:Class="MobiHymn4.Views.SettingsPage"
    Title="App Settings">
	<ContentPage.BindingContext>
		<ViewModels:SettingsViewModel/>
	</ContentPage.BindingContext>
    <ContentPage.Resources>
        <Style TargetType="FlexLayout" x:Key="FlexShort">
            <Setter Property="Padding" Value="15" />
            <Setter Property="JustifyContent" Value="SpaceBetween" />
            <Setter Property="AlignItems" Value="Center" />
         </Style>
        <Style TargetType="BoxView">
            <Setter Property="HeightRequest" Value="1" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
            <Setter Property="Background" Value="{AppThemeBinding Dark={StaticResource Gray}, Light={StaticResource GrayLight}}" />
        </Style>

    </ContentPage.Resources>
    <StackLayout Padding="0, 10, 0, 0">
        <FlexLayout BackgroundColor="Transparent" Style="{StaticResource FlexShort}">
            <Label Text="Dark Mode" Style="{StaticResource Key=Title}"/>
            <Switch
                IsToggled="{Binding IsDarkMode}"
                x:Name="swDarkMode"
                Toggled="swDarkMode_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
            />
        </FlexLayout>
        <BoxView />
        <FlexLayout BackgroundColor="Transparent" Style="{StaticResource FlexShort}">
            <Label Text="Keep Awake" Style="{StaticResource Key=Title}"/>
            <Switch
                IsToggled="{Binding KeepAwake}"
                x:Name="swKeepAwake"
                Toggled="swKeepAwake_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
            />
        </FlexLayout>
        <FlexLayout BackgroundColor="Transparent" IsVisible="False" Style="{StaticResource FlexShort}">
            <Label Text="Lock Orientation" Style="{StaticResource Key=Title}"/>
            <Switch
                IsToggled="{Binding IsOrientationLocked}"
                x:Name="swOrientationLock"
                Toggled="swOrientationLock_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
            />
        </FlexLayout>
        <BoxView />
        <FlexLayout BackgroundColor="Transparent" Margin="0,-10" Style="{StaticResource FlexShort}" IsVisible="False">
            <FlexLayout.Triggers>
                <DataTrigger TargetType="FlexLayout" Binding="{Binding ShowSyncs}" Value="False">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </FlexLayout.Triggers>
            <FlexLayout.GestureRecognizers>
                <TapGestureRecognizer Tapped="swResync_Clicked" />
            </FlexLayout.GestureRecognizers>
            <Label Text="Resync Resources" Style="{StaticResource Key=Title}"/>
            <Button
                x:Name="swResync"
                HorizontalOptions="Center"
                Style="{StaticResource Button-Clear}"
                WidthRequest="20">
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="FAS"
                        Color="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryText}}"
                        Size="Small"
                        Glyph="{x:Static fontawesome:FontAwesomeIcons.Sync}"
                    />
                </Button.ImageSource>
            </Button>
        </FlexLayout>
        <FlexLayout IsVisible="False" Direction="Column" Padding="15">
            <FlexLayout.Triggers>
                <DataTrigger TargetType="FlexLayout" Binding="{Binding ShowSyncs}" Value="True">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </FlexLayout.Triggers>
            <StackLayout>
                <Label Text="Hymn Updates:" TextColor="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource PrimaryText}}"/>
            </StackLayout>
            <StackLayout>
                <elements:TimelineItem Item="{Binding ResyncCreateList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowCreate}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <elements:TimelineItem Item="{Binding ResyncUpdateList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowUpdate}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <elements:TimelineItem Item="{Binding ResyncDeleteList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowDelete}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <FlexLayout JustifyContent="End">
                    <Button x:Name="btnResync" Text="Sync" Padding="30,10" Clicked="btnResync_Clicked"/>
                </FlexLayout>
            </StackLayout>

        </FlexLayout>
    </StackLayout>

</ContentPage>

