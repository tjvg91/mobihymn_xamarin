<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:vm="clr-namespace:MobiHymn4.ViewModels"
    xmlns:fontawesome="clr-namespace:FontAwesome"
    xmlns:utils="clr-namespace:MobiHymn4.Utils"
    xmlns:simplebottomdrawer="clr-namespace:Xam.Plugin.SimpleBottomDrawer;assembly=Xam.Plugin.SimpleBottomDrawer"
    x:Class="MobiHymn4.Views.ReadPage"
    x:Name="root"
    Shell.TabBarIsVisible="False"
    Shell.NavBarIsVisible="{Binding IsReadView}"
    BackgroundColor="{StaticResource PrimaryText}">

    <ContentPage.Resources>
        <Style TargetType="BoxView">
            <Setter Property="HeightRequest" Value="1" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
            <Setter Property="Background" Value="{AppThemeBinding Dark={StaticResource Gray}, Light={StaticResource GrayLight}}" />
        </Style>
    </ContentPage.Resources>

    <ContentPage.BindingContext>
        <vm:ReadViewModel />
    </ContentPage.BindingContext>

    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="tbSearch" Clicked="tbSearch_Clicked">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="FAS"
                    Color="{StaticResource PrimaryText}"
                    Size="Medium"
                    Glyph="{x:Static fontawesome:FontAwesomeIcons.Search}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem x:Name="tbBookmarks" Clicked="tbBookmarks_Clicked">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    x:Name="fisBookmark"
                    FontFamily="{Binding BookmarkFont}"
                    Color="{StaticResource PrimaryText}"
                    Size="Medium"
                    Glyph="{x:Static fontawesome:FontAwesomeIcons.Heart}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem x:Name="tbSettings" Clicked="tbSettings_Clicked">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="FAS"
                    Color="{StaticResource PrimaryText}"
                    Size="Medium"
                    Glyph="{x:Static fontawesome:FontAwesomeIcons.Cog}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>

    </ContentPage.ToolbarItems>

    <ContentPage.Triggers>
        <DataTrigger TargetType="ContentPage" Binding="{Binding IsReadView}" Value="True">
            <Setter Property="BackgroundColor">
                <Setter.Value>
                    <OnPlatform>
                        <On Platform="iOS" Value="{Binding ActiveColor}" />
                    </OnPlatform>
                </Setter.Value>
            </Setter>
        </DataTrigger>
        <DataTrigger TargetType="ContentPage" Binding="{Binding IsReadView}" Value="False">
            <Setter Property="BackgroundColor">
                <Setter.Value>
                    <OnPlatform>
                        <On Platform="iOS" Value="{StaticResource PrimaryText}" />
                    </OnPlatform>
                </Setter.Value>
            </Setter>
        </DataTrigger>
    </ContentPage.Triggers>

    <ContentPage.Content>
        <StackLayout BackgroundColor="Transparent">
            <AbsoluteLayout
                x:Name="readerStack"
                BackgroundColor="{Binding ActiveColor}"
                VerticalOptions="FillAndExpand"
                AbsoluteLayout.LayoutFlags="All"
                AbsoluteLayout.LayoutBounds="0,0,1,1">
                <ScrollView AbsoluteLayout.LayoutFlags="All" AbsoluteLayout.LayoutBounds="0,0,1,1">
                    <StackLayout HorizontalOptions="Fill" Padding="5">
                        <StackLayout.GestureRecognizers>
                            <PinchGestureRecognizer PinchUpdated="PinchGestureRecognizer_PinchUpdated" />
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                        </StackLayout.GestureRecognizers>

                        <Label
                            Text="{Binding Title}"
                            FontFamily="{Binding ActiveFont}"
                            FontSize="{Binding ActiveFontSize}"
                            HorizontalTextAlignment="{Binding ActiveAlignment}"
                            TextColor="{Binding ActiveColorText}"
                            BackgroundColor="{Binding ActiveColor}"
                            CharacterSpacing="{Binding LetterSpacing}"
                            LineHeight="1.2"
                            TextDecorations="Underline"
                            Margin="0,0,15,0"/>
                        <Label
                            Text="{Binding Lyrics}"
                            FontFamily="{Binding ActiveFont}"
                            FontSize="{Binding ActiveFontSize}"
                            HorizontalTextAlignment="{Binding ActiveAlignment}"
                            TextColor="{Binding ActiveColorText}"
                            BackgroundColor="{Binding ActiveColor}"
                            CharacterSpacing="{Binding LetterSpacing}"
                            LineHeight="1.2"
                            Margin="0,0,15,0"
                            TextType="Html"/>
                        <!--
                            IsVisible="{OnPlatform Android=True, iOS=False}"-->
                        <!--<elements:SelectableLabel
                            Text="{Binding Lyrics}"
                            FontFamily="{Binding ActiveFont}"
                            FontSize="{Binding ActiveFontSize}"
                            HorizontalTextAlignment="{Binding ActiveAlignment}"
                            TextColor="{Binding ActiveColorText}"
                            BackgroundColor="{Binding ActiveColor}"
                            Margin="0,0,15,0"
                            IsVisible="{OnPlatform Android=False, iOS=True}">
                        </elements:SelectableLabel>-->
                    </StackLayout>
                </ScrollView>
                <Button
                    Style="{StaticResource Button-FAB}"
                    x:Name="tbHome1"
                    Clicked="btnHome_Clicked"
                    IsVisible="False"
                    CornerRadius="{OnPlatform Android=40, iOS=30}"
                    AbsoluteLayout.LayoutFlags="PositionProportional"  
                    AbsoluteLayout.LayoutBounds="{OnPlatform Android='.95,.96,60,60', iOS='.95,.96,60,60'}">
                    <Button.ImageSource>
                        <FontImageSource
                            FontFamily="FAS"
                            Color="{StaticResource PrimaryText}"
                            Size="Medium"
                            Glyph="{x:Static fontawesome:FontAwesomeIcons.GripVertical}"/>
                    </Button.ImageSource>
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Grid}" />
                                <BindingCondition Binding="{Binding IsReadView}" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="True" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Button
                    Style="{StaticResource Button-FAB}"
                    x:Name="tbHome2"
                    Clicked="btnHome_Clicked"
                    IsVisible="False"
                    AbsoluteLayout.LayoutFlags="PositionProportional"  
                    AbsoluteLayout.LayoutBounds="{OnPlatform Android='.95,.96,60,60', iOS='.95,.96,60,60'}" >
                    <Button.ImageSource>
                        <FontImageSource
                            FontFamily="FAS"
                            Color="{StaticResource PrimaryText}"
                            Size="Small"
                            Glyph="{x:Static fontawesome:FontAwesomeIcons.Keyboard}"/>
                    </Button.ImageSource>
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition  Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Numpad}" />
                                <BindingCondition Binding="{Binding IsReadView}" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="True" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <simplebottomdrawer:BottomDrawer
                    Margin="40"
                    Padding="20"
                    ExpandedPercentage="90"
                    IsExpanded="True"
                    IsVisible="{Binding IsBookmarkGroupsShown}"
                    HeightRequest="{Binding DrawerHeight}"
                    HorizontalOptions="Center"
                    LockStates="{Binding LockStates}"
                    AbsoluteLayout.LayoutFlags="PositionProportional"
                    AbsoluteLayout.LayoutBounds="0.5,0.45,-1,0.5"
                    Background="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource PrimaryText}}">
                    <StackLayout>
                        <Label
                            Style="{StaticResource Title}"
                            Text="Save to"
                            HorizontalTextAlignment="Center"
                            FontAttributes="Bold"
                            Margin="0,0,0,20"/>
                        <BoxView />
                        <ScrollView>
                            <CollectionView ItemsSource="{Binding GroupKeys}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <FlexLayout Direction="Row">
                                            <FlexLayout.GestureRecognizers>
                                                <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped_1" CommandParameter="{Binding Name}" />
                                            </FlexLayout.GestureRecognizers>
                                            <Frame
                                                Background="{AppThemeBinding Dark={StaticResource GrayLight}, Light={StaticResource Gray}}"
                                                Padding="10"
                                                HeightRequest="{OnPlatform iOS=30, Android=40}"
                                                Margin="{OnPlatform iOS='-1,3,7,0', Android='0,3,7,0'}"
                                                BorderColor="{AppThemeBinding Dark={StaticResource GrayLight}, Light={StaticResource Gray}}"
                                                HasShadow="False"
                                                CornerRadius="{OnPlatform iOS=15, Android=20}">
                                                <Image WidthRequest="{OnPlatform iOS=10, Android=20}">
                                                    <Image.Source>
                                                        <FontImageSource
                                                            Color="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource PrimaryText}}"
                                                            FontFamily="FAS"
                                                            Glyph="{x:Static fontawesome:FontAwesomeIcons.Heart}"
                                                            Size="Medium"/>
                                                    </Image.Source>
                                                </Image>
                                            </Frame>
                                            <StackLayout Orientation="Vertical">
                                                <Label Text="{Binding Name}"
                                                       Style="{StaticResource Title}"
                                                       TextType="Html"
                                                       HorizontalTextAlignment="Start"/>
                                                <Label Text="{Binding CountString}"
                                                       Style="{StaticResource Subtitle}"
                                                       TextType="Html"
                                                       HorizontalTextAlignment="Start"
                                                       Margin="0,-5,0,0"/>
                                            </StackLayout>
                                        </FlexLayout>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </ScrollView>
                        <BoxView />
                        
                        <FlexLayout JustifyContent="SpaceEvenly" HeightRequest="100" Margin="0,10,0,0" Direction="Column">
                            <Button
                                x:Name="btnAddNewGroup"
                                Padding="10"
                                Margin="0,0,0,10"
                                Text="Create new group"
                                Clicked="btnAddNewGroup_Clicked"/>
                            <Button
                                x:Name="btnGrpCancel"
                                HeightRequest="40"
                                Style="{StaticResource Button-Cancel}"
                                Text="Cancel"
                                FlexLayout.Grow="1"
                                Clicked="btnGrpCancel_Clicked"
                                />
                        </FlexLayout>
                    </StackLayout>
                    
                </simplebottomdrawer:BottomDrawer>
            </AbsoluteLayout>
            <StackLayout
                Orientation="Horizontal"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="Center"
                BackgroundColor="{StaticResource PrimaryText}"
                IsVisible="True"
                Padding="{OnPlatform Android='0', iOS='0,5,5,0'}"
                AbsoluteLayout.LayoutFlags="All"
                AbsoluteLayout.LayoutBounds="{OnPlatform Android='1,1,1,0.07', iOS='1,1,1,0.05'}"
                x:Name="stckPlayer">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding IsReadView}" Value="False">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding ActiveColor}" Value="{StaticResource PrimaryText}">
                        <Setter Property="BackgroundColor" Value="{StaticResource Gray}"/>

                    </DataTrigger>
                </StackLayout.Triggers>
                <Button
                    x:Name="btnPlay"
                    WidthRequest="30"
                    Margin="10,0,0,0"
                    Style="{StaticResource Button-Clear-Reverse}"
                    Clicked="btnPlay_Clicked"
                >
                    <Button.ImageSource>
                        <FontImageSource
                            x:Name="fisPlayer"
                            FontFamily="FAS"
                            Color="{StaticResource Primary}"
                            Size="Small"
                            Glyph="{x:Static fontawesome:FontAwesomeIcons.Play}"
                        />
                    </Button.ImageSource>
                </Button>
                <Label x:Name="lblCurTime" WidthRequest="40" VerticalOptions="Center" TextColor="{x:StaticResource White}" Text="0:00"/>
                <Slider
                    x:Name="sldlrPlayer"
                    Maximum="360"
                    Value="180"
                    ValueChanged="Slider_ValueChanged"/>
                <Label x:Name="lblTotalTime" WidthRequest="40" VerticalOptions="Center" TextColor="{x:StaticResource White}">3:00</Label>
                <Button
                    x:Name="btnMdiSettings"
                    WidthRequest="30"
                    Margin="0,0,10,0"
                    Clicked="btnMdiSettings_Clicked"
                    Style="{StaticResource Button-Clear-Reverse}"
                    IsVisible="False">
                    <Button.ImageSource>
                        <FontImageSource
                            x:Name="fisMorePlayer"
                            FontFamily="FAS"
                            Color="{StaticResource Primary}"
                            Size="Small"
                            Glyph="{x:Static fontawesome:FontAwesomeIcons.Sliders}"
                        />
                    </Button.ImageSource>
                </Button>
            </StackLayout>
            
            <BoxView
                AbsoluteLayout.LayoutFlags="All"
                AbsoluteLayout.LayoutBounds="{OnPlatform Android='0,0,1,1', iOS='0,0,1,1.5'}"
                Background="Black"
                Opacity="0.5"
                IsVisible="False"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>

