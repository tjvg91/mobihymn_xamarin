<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:fontawesome="clr-namespace:FontAwesome"
    xmlns:vm="clr-namespace:MobiHymn2.ViewModels"
    xmlns:utils="clr-namespace:MobiHymn2.Utils"
    xmlns:ess="clr-namespace:Xamarin.Essentials;assembly=Xamarin.Essentials"
    xmlns:elems="clr-namespace:MobiHymn2.Elements"
    Shell.TabBarIsVisible="False"
    Shell.NavBarIsVisible="{Binding IsNotBusy}"
    x:Class="MobiHymn2.Views.NumSearchPage"
    x:Name="root"
    Title="{Binding Title}">

	<ContentPage.BindingContext>
		<vm:NumSearchViewModel/>
	</ContentPage.BindingContext>

    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="tbSearch" Clicked="tbSearch_Clicked">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="FAS"
                    Color="{StaticResource PrimaryText}"
                    Size="Medium"
                    Glyph="{x:Static fontawesome:FontAwesomeIcons.Search}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>
        <Style TargetType="StackLayout">
            <Setter Property="BackgroundColor"
                    Value="{AppThemeBinding Dark={StaticResource PrimaryText}, Light=White,Default=White}"
            />
        </Style>
        <Style TargetType="Button" x:Key="Numpad">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryText}, Dark={StaticResource Primary}}" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryText}}" />
                                <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource PrimaryText}, Dark={StaticResource Primary}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource PrimaryLight}" />
                                <Setter Property="TextColor" Value="{StaticResource Gray}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
            <Setter Property="BorderWidth" Value="1"/>
            <Setter Property="HorizontalOptions" Value="Center"/>
            <Setter Property="VerticalOptions" Value="Center"/>
            <Setter Property="WidthRequest" Value="60"/>
            <Setter Property="HeightRequest" Value="60"/>
            <Setter Property="CornerRadius" Value="30"/>
            <Setter Property="FontSize" Value="19"/>
        </Style>
    </ContentPage.Resources>

    <StackLayout
        VerticalOptions="FillAndExpand"
        HorizontalOptions="FillAndExpand">
        <FlexLayout
            HorizontalOptions="CenterAndExpand"
            VerticalOptions="CenterAndExpand"
            AlignItems="Center"
            JustifyContent="Center"
            IsVisible="False">
            <FlexLayout.Triggers>
                <DataTrigger TargetType="FlexLayout" Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </FlexLayout.Triggers>
            <elems:AnimatingView
                Source="settingup"
                Size="{OnPlatform iOS=1.5, Android=400}"/>
        </FlexLayout>
        <FlexLayout Direction="Column" AlignItems="End" JustifyContent="Start" Margin="5" IsVisible="False">
            <FlexLayout.Triggers>
                <DataTrigger TargetType="FlexLayout" Binding="{Binding IsBusy}" Value="False">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </FlexLayout.Triggers>

            <Button HeightRequest="30" WidthRequest="30" Background="Transparent" IsVisible="False" Clicked="Toggle_Clicked">
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="FAS"
                        Color="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource PrimaryText}}"
                        Size="Medium"
                        Glyph="{Static Member=fontawesome:FontAwesomeIcons.GripVertical}" />
                </Button.ImageSource>
                <Button.Triggers>
                    <DataTrigger TargetType="{Type VisualElement}" Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Numpad}">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            <Button HeightRequest="30" WidthRequest="30" Background="Transparent" IsVisible="False" Clicked="Toggle_Clicked">
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="FAS"
                        Color="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource PrimaryText}}"
                        Size="Medium"
                        Glyph="{Static Member=fontawesome:FontAwesomeIcons.Keyboard}" />
                </Button.ImageSource>
                <Button.Triggers>
                    <DataTrigger TargetType="{Type VisualElement}" Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Grid}">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </FlexLayout>
        <Grid x:Name="grdNums" Margin="10" IsVisible="False">
            <Grid.Triggers>
                <MultiTrigger TargetType="Grid">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Grid}" />
                        <BindingCondition Binding="{Binding IsNotBusy}" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="IsVisible" Value="True" />
                </MultiTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
        </Grid>
        <StackLayout VerticalOptions="FillAndExpand" IsVisible="False" >
            <StackLayout.Triggers>
                <MultiTrigger TargetType="StackLayout">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding HymnInputType}" Value="{x:Static utils:InputType.Numpad}" />
                        <BindingCondition Binding="{Binding IsNotBusy}" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="IsVisible" Value="True" />
                </MultiTrigger>
            </StackLayout.Triggers>
            <Grid
                ColumnSpacing="0"
                RowSpacing="0"
                ColumnDefinitions="0.8*,*,*,*,0.8*">
                <Grid.Triggers>
                    <DataTrigger
                        TargetType="Grid"
                        Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                        Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="RowDefinitions" Value="*,70,70,70,70,70,0.5*" />
                            <Setter Property="VerticalOptions" Value="FillAndExpand" />
                    </DataTrigger>
                    <DataTrigger
                        TargetType="Grid"
                        Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                        Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="RowDefinitions" Value="*,70,70,70" />
                            <Setter Property="VerticalOptions" Value="FillAndExpand" />
                    </DataTrigger>
                </Grid.Triggers>

                <Label
                    x:Name="btnHymnNum"
                    Text="{Binding HymnNum}"
                    TextTransform="Lowercase"
                    TextColor="{AppThemeBinding Light={StaticResource Gray}, Dark={StaticResource GrayLight}}"
                    HorizontalTextAlignment="Center"
                    VerticalTextAlignment="Center"
                    Grid.Column="0"
                    Grid.Row="0"
                    Grid.ColumnSpan="5"
                    FontSize="50"
                />

                <Button Text="1" Grid.Column="1" Grid.Row="1" BindingContext="1" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="2" Grid.Column="2" Grid.Row="1" BindingContext="2" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="3" Grid.Column="3" Grid.Row="1" BindingContext="3" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                    
                <Button Text="4" Grid.Column="1" Grid.Row="2" BindingContext="4" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="5" Grid.Column="2" Grid.Row="2" BindingContext="5" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="6" Grid.Column="3" Grid.Row="2" BindingContext="6" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                    
                <Button Text="7" Grid.Column="1" Grid.Row="3" BindingContext="7" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="8" Grid.Column="2" Grid.Row="3" BindingContext="8" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>
                <Button Text="9" Grid.Column="3" Grid.Row="3" BindingContext="9" Clicked="Key_Clicked" Style="{StaticResource Numpad}"/>

                
                <Button Text="s" BindingContext="s" TextTransform="Lowercase" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="1" />
                            <Setter Property="Grid.Row" Value="4" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="0" />
                            <Setter Property="Grid.Row" Value="1" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button Text="t" BindingContext="t" TextTransform="Lowercase" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="2" />
                            <Setter Property="Grid.Row" Value="4" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="0" />
                            <Setter Property="Grid.Row" Value="2" />
                        </DataTrigger>
                    </Button.Triggers>

                </Button>
                <Button Text="f" BindingContext="f" TextTransform="Lowercase" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="3" />
                            <Setter Property="Grid.Row" Value="4" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="0" />
                            <Setter Property="Grid.Row" Value="3" />
                        </DataTrigger>
                    </Button.Triggers>

                </Button>
                    
                <Button BindingContext="b" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.ImageSource>
                        <FontImageSource
                            FontFamily="FAS"
                            Color="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryText}}"
                            Size="19"
                            Glyph="{Static Member=fontawesome:FontAwesomeIcons.Backspace}"
                        />
                    </Button.ImageSource>
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="1" />
                            <Setter Property="Grid.Row" Value="5" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="4" />
                            <Setter Property="Grid.Row" Value="1" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                    
                <Button Text="0" BindingContext="0" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="2" />
                            <Setter Property="Grid.Row" Value="5" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="4" />
                            <Setter Property="Grid.Row" Value="2" />
                        </DataTrigger>
                    </Button.Triggers>

                </Button>

                <Button BindingContext="e" Clicked="Key_Clicked" Style="{StaticResource Numpad}">
                    <Button.ImageSource>
                        <FontImageSource
                            FontFamily="FAS"
                            Color="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryText}}"
                            Size="19"
                            Glyph="{Static Member=fontawesome:FontAwesomeIcons.Check}"
                        />
                    </Button.ImageSource>
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Portrait}">
                            <Setter Property="Grid.Column" Value="3" />
                            <Setter Property="Grid.Row" Value="5" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Source={x:Reference root}, Path=BindingContext.Orientation}"
                            Value="{x:Static ess:DisplayOrientation.Landscape}">
                            <Setter Property="Grid.Column" Value="4" />
                            <Setter Property="Grid.Row" Value="3" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>

        </StackLayout>
    </StackLayout>
</ContentPage>

